button, button:hover {
  font-weight:bold;
  vertical-align: middle;
  border:1px solid rgb(0,122,255);
  color: rgb(0,122,255) !important;
  background: none;
  -moz-border-radius: 5px;
  -webkit-border-radius: 5px;
  border-radius: 5px;
  height: 23px;
}

/*
button:hover, .submit:hover {
  color: rgba(0,0,0,0);
  border-style: solid;
  border:1px solid #e6e6e6;
  cursor: pointer;
  background-color: rgb(0,122,255);
}
*/

button[disabled]
{
  color: #aaaaaa;
  opacity: 0.8;
  cursor: not-allowed;
  -webkit-filter: grayscale(100%);
  filter: grayscale(100%);
}


.Wt-btn > img, .WhiteIcon
{
  /* Turn [any color] icons to iOS blue (rgb(0,122,255) or #007AFF)
     See: https://codepen.io/sosuke/pen/Pjoqqp to calculate filter
   */
  filter: brightness(0) saturate(100%) invert(30%) sepia(56%) saturate(3200%) hue-rotate(200deg) brightness(102%) contrast(107%);
}


.itemselected img.WhiteIcon
{
  /* Turn [any color] icons to white when they are a selected item in a side menu,
     and you add added the icon as a WImage explicitly to the anchor.  Ex.
     WMenuItem *item = ...
     WImage *image = new WImage( "path/to/icon" );
     image->addStyleClass( "WhiteIcon" );
     item->anchor()->addWidget( image );
   */
  filter: invert(100%) sepia(0%) saturate(7485%) hue-rotate(187deg) brightness(100%) contrast(104%);  
}

img.WhiteIcon[disabled]
{
  /* Try to make disabled Icon imafes to #797f8e */
  filter: brightness(0) saturate(100%) invert(52%) sepia(5%) saturate(902%) hue-rotate(185deg) brightness(95%) contrast(89%);
}

.FooterHelpBtnMbl
{
  cursor:pointer;
  margin-top: 2px;
}

.PhoneAuxWindowFooter
{
  padding-top: 6px;
  height: 25px;
  padding-right: 2px;
}


.PhoneAuxWindowFooter > button, .PhoneAuxWindowFooter > button:hover
{
  background: none;
  color: rgb(0,122,255) !important;
  text-decoration: underline;
  border: none;
}

.PhoneAuxWindowFooter > button[disabled]
{
  background: none;
  /* color: #aaaaaa !important; */
  color: rgba(0,0,0,0) !important;
  text-decoration: underline;
  border: none;
}

.MobileBackBtn, .MobileBackBtn:hover
{
  vertical-align: middle;
  background: none;
  background: url(images/mobile_back_2.svg) !important;
  background-repeat: no-repeat !important;
  background-position: 2px 3.5px  !important;
  background-size: 10px 16px  !important;
  color: rgb(0,122,255) !important;
  text-decoration: underline;
  
  padding-left: 15px;
  border: none;
  float: left;
  margin-right: 5px;
}

.CenterBtnInMblAuxWindowHeader
{
  border: 1px solid rgb(0,122,255) !important;
}

ul.VerticalMenu > li.item, ul.VerticalMenuPhone > li.item
{
  background: none;
  border: 1px solid rgb(0,122,255);
}

ul.VerticalMenu > li.item > a, ul.VerticalMenuPhone > li.item > a
{
  color: rgb(0,122,255) !important;
}

ul.VerticalMenu > li.itemselected, ul.VerticalMenuPhone > li.itemselected
{
  color: white !important;
  background: rgb(0,122,255);
  border: 1px solid white;
}


/* Start styling for iPhoneX* phones with a notch */

/* Class applied to the ".Wt-domRoot" div if CSS supports safe-area-inset-left
 and the "notch" is on the left side of the screen.
 See the JavScript function DoOrientationChange in InterSpec.js.
 */
.LandscapeLeft {
  padding-right: 0;
  padding-left: env(safe-area-inset-left);
  padding-bottom: env(safe-area-inset-bottom);
}

/* Same as ".LandscapeLeft", but for when the notch is on the right. */
.LandscapeRight {
  padding-left: 0;
  padding-right: 0;
}

.Wt-domRoot .LandscapeLeft, .Wt-domRoot .LandscapeRight
{
  top: 0;
  left: 0;
  position: 'absolute';
  width: 100%;
  height: 100%;
}

.LandscapeLeft .InterSpec, .LandscapeRight .InterSpec {
  /* the ".InterSpec" is first one where height is 100%, so the outermost one
   we can put a margin or padding on.
   */
  margin-bottom: max( calc(env(safe-area-inset-bottom) - 8px), 0px);
}

.LandscapeLeft .MobileMenuButton, .LandscapeLeft .MobileMenuButton:hover,
  .LandscapeRight .MobileMenuButton, .LandscapeRight .MobileMenuButton:hover
{
  /* Accounts for rounded screen corners. - 12px seems to work ok */
  top: max( calc(0.5*env(safe-area-inset-left)), 5px );
  left: max( calc(0.5*env(safe-area-inset-left)), 5px );
}


.LandscapeLeft .PopupDivMenuPhone
{
  /* Set width of phone menu divs to allow padding */
  width: calc(220px + env(safe-area-inset-left));
}

ul.PopupDivMenuPhone > li:last-of-type
{
  padding-bottom: env(safe-area-inset-bottom);
}

/* Set padding for all mobile menu items, except the first one (e.g. all except
 close or back)
 */
.LandscapeLeft .PopupDivMenuPhone li + li
{
  padding-left: env(safe-area-inset-left);
}

.LandscapeLeft .AuxWindow-content.MobileFullScreen
{
  padding-left: env(safe-area-inset-left);
  padding-bottom: env(safe-area-inset-bottom);
}

.LandscapeRight .AuxWindow-content.MobileFullScreen
{
  padding-right: env(safe-area-inset-right);
  padding-bottom: env(safe-area-inset-bottom);
}

.AuxWindow-content .MobileModal
{
  padding: 0px 4px 4px 4px;
}

/* End styling for iPhoneX* phones with a notch */
