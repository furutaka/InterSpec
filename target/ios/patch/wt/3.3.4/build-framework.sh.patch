--- build-framework.sh.orig	2021-03-27 10:46:49.000000000 -0700
+++ build-framework.sh	2021-03-18 21:05:52.000000000 -0700
@@ -4,28 +4,35 @@
 #
 # Inspired by Pete Goodliffe's boost.sh script
 #
+# Further modified by wcjohns@sandia.gov to update for only 64 bit processors, and newer build issues, and some InterSpec specific things
 
-: ${BOOST_FRAMEWORK_PATH:=/Users/koen/project/wt/ipad/boostoniphone/framework}
-: ${IOS_SDK:=/Developer/Platforms/iPhoneOS.platform/Developer}
-: ${ISIM_SDK:=/Developer/Platforms/iPhoneSimulator.platform/Developer}
-: ${SDK_VER:=5.0}
+: ${BOOST_FRAMEWORK_PATH:=`pwd`/framework}
+: ${BOOST_PREFIX:=`pwd`/../prefix}
+: ${IOS_SDK:=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer}
+: ${ISIM_SDK:=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer}
+: ${SDK_VER:=`xcodebuild -showsdks | grep iphoneos | egrep "[[:digit:]]+\.[[:digit:]]+" -o | tail -1`}}
+: ${XCODE_ROOT:=`xcode-select -print-path`}
+: ${COMPILER:="clang++"}
 
 : ${CMAKE:=cmake}
 
 : ${BUILD_DIR:=`pwd`}
-: ${WT_DIR:=`pwd`/..}
-: ${WT_VERSION:=3_2_0}
+: ${WT_DIR:=`pwd`/wt-3.3.4}
+: ${WT_VERSION:=3_3_4}
 : ${FRAMEWORKDIR:=`pwd`}
 
-BUILD_ARMV6_DIR=$BUILD_DIR/build-armv6
-BUILD_ARMV7_DIR=$BUILD_DIR/build-armv7
-BUILD_I386_DIR=$BUILD_DIR/build-i386
-STAGE_DIR=$BUILD_DIR/stage
+BUILD_ARM64_DIR=$BUILD_DIR/build-arm64
+BUILD_X86_64_DIR=$BUILD_DIR/build-x86-64
+
+
+#STAGE_DIR=$BUILD_DIR/stage
+STAGE_DIR=`pwd`/../prefix
 TMP_DIR=$BUILD_DIR/tmp
 
 : ${COMMON_CMAKE_FLAGS=-DUSE_BOOST_FRAMEWORK=ON \
+       -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_FRAMEWORK_PATH:FILEPATH=$BOOST_FRAMEWORK_PATH \
-       -DBOOST_PREFIX=$BOOST_FRAMEWORK_PATH \
+       -DBOOST_PREFIX=$BOOST_PREFIX \
        -DCMAKE_INSTALL_PREFIX=$STAGE_DIR \
        -DSHARED_LIBS=OFF \
        -DCONNECTOR_FCGI=OFF \
@@ -37,7 +44,14 @@
        -DENABLE_SSL=OFF \
        -DENABLE_POSTGRES=OFF \
        -DENABLE_FIREBIRD=OFF \
-       -DHTTP_WITH_ZLIB=OFF}
+       -DHTTP_WITH_ZLIB=OFF \
+       -DWT_CPP_11_MODE="-std=c++11" \
+       -DENABLE_SSL=OFF \
+       -DWT_BOOST_DISCOVERY=OFF \
+       -DBoost_INCLUDE_DIR:FILEPATH=$BOOST_PREFIX/include \
+       -DCONFIGDIR=$BOOST_PREFIX/etc/wt \
+       -DWT_SIGNALS_IMPLEMENTATION="boost.signals2" }
+
 
 abort()
 {
@@ -48,46 +62,50 @@
 
 clean()
 {
-    rm -rf $BUILD_ARMV6_DIR
-    rm -rf $BUILD_ARMV7_DIR
-    rm -rf $BUILD_I386_DIR
+    rm -rf $BUILD_ARM64_DIR
+    rm -rf $BUILD_X86_64_DIR
     rm -rf $TMP_DIR
 }
 
-build-armv6()
-{
-   [ -d $BUILD_ARMV6_DIR ] || mkdir -p $BUILD_ARMV6_DIR
-   ( cd $BUILD_ARMV6_DIR; ${CMAKE} \
-       $COMMON_CMAKE_FLAGS \
-       -DCMAKE_C_COMPILER:FILEPATH=$IOS_SDK/usr/bin/gcc \
-       -DCMAKE_CXX_COMPILER:FILEPATH=$IOS_SDK/usr/bin/g++ \
-       -DCMAKE_C_FLAGS:STRING="-mthumb -fvisibility=hidden -isysroot $IOS_SDK/SDKs/iPhoneOS${SDK_VER}.sdk -arch armv6 -pipe" \
-       -DCMAKE_CXX_FLAGS:STRING="-mthumb -fvisibility=hidden -fvisibility-inlines-hidden -isysroot $IOS_SDK/SDKs/iPhoneOS${SDK_VER}.sdk -arch armv6 -pipe -DWT_NO_SPIRIT" \
-       ../../ && make ) || abort "Failed building for arm6 architecture"
-}
 
-build-armv7()
+build-arm64()
 {
-   [ -d $BUILD_ARMV7_DIR ] || mkdir -p $BUILD_ARMV7_DIR
-   ( cd $BUILD_ARMV7_DIR; ${CMAKE} \
+   echo '======================================================='
+   echo '= Building arm64'
+   echo '======================================================='
+   sleep 2
+   [ -d $BUILD_ARM64_DIR ] || mkdir -p $BUILD_ARM64_DIR
+   ( cd $BUILD_ARM64_DIR; ${CMAKE} \
        $COMMON_CMAKE_FLAGS \
-       -DCMAKE_C_COMPILER:FILEPATH=$IOS_SDK/usr/bin/gcc \
-       -DCMAKE_CXX_COMPILER:FILEPATH=$IOS_SDK/usr/bin/g++ \
-       -DCMAKE_C_FLAGS:STRING="-mthumb -fvisibility=hidden -isysroot $IOS_SDK/SDKs/iPhoneOS${SDK_VER}.sdk -arch armv7 -pipe" \
-       -DCMAKE_CXX_FLAGS:STRING="-mthumb -fvisibility=hidden -fvisibility-inlines-hidden -isysroot $IOS_SDK/SDKs/iPhoneOS${SDK_VER}.sdk -arch armv7 -pipe -DWT_NO_SPIRIT" \
-       ../../ && make ) || abort "Failed building for arm7 architecture"
-}
-
-build-i386()
-{
-   [ -d $BUILD_I386_DIR ] || mkdir -p $BUILD_I386_DIR
-   ( cd $BUILD_I386_DIR; ${CMAKE} \
+       -DCMAKE_C_COMPILER:FILEPATH=$XCODE_ROOT/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang \
+       -DCMAKE_CXX_COMPILER:FILEPATH=$XCODE_ROOT/Toolchains/XcodeDefault.xctoolchain/usr/bin/$COMPILER \
+       -DCMAKE_OSX_SYSROOT:FILEPATH=$IOS_SDK/SDKs/iPhoneOS${SDK_VER}.sdk \
+       -DCMAKE_C_FLAGS:STRING="-fvisibility=hidden -DBOOST_AC_USE_PTHREADS -DBOOST_SP_USE_PTHREADS -isysroot $IOS_SDK/SDKs/iPhoneOS${SDK_VER}.sdk -arch arm64 -pipe" \
+       -DCMAKE_CXX_FLAGS:STRING="-DBOOST_SIGNALS_NO_DEPRECATION_WARNING -DBOOST_AC_USE_PTHREADS -DBOOST_SP_USE_PTHREADS -std=c++11 -stdlib=libc++ -fvisibility=hidden -fvisibility-inlines-hidden -isysroot $IOS_SDK/SDKs/iPhoneOS${SDK_VER}.sdk -arch arm64 -pipe" \
+       $WT_DIR )
+       #cd /Users/ckmorte/InterSpec/target/ios/wt/wt-3.3.4
+       cd $BUILD_ARM64_DIR
+       make -j12 install || abort "Failed building for arm64 architecture"
+}
+
+build-X86-64()
+{
+   echo '======================================================='
+   echo '= Building x86_64'
+   echo '======================================================='
+   sleep 2
+   [ -d $BUILD_X86_64_DIR ] || mkdir -p $BUILD_X86_64_DIR
+   ( cd $BUILD_X86_64_DIR; ${CMAKE} \
        $COMMON_CMAKE_FLAGS \
-       -DCMAKE_C_COMPILER:FILEPATH=$ISIM_SDK/usr/bin/gcc \
-       -DCMAKE_CXX_COMPILER:FILEPATH=$ISIM_SDK/usr/bin/g++ \
-       -DCMAKE_C_FLAGS:STRING="-arch i386 -fvisibility=hidden -isysroot $ISIM_SDK/SDKs/iPhoneSimulator${SDK_VER}.sdk" \
-       -DCMAKE_CXX_FLAGS:STRING="-arch i386 -fvisibility=hidden -fvisibility-inlines-hidden -isysroot $ISIM_SDK/SDKs/iPhoneSimulator${SDK_VER}.sdk -DWT_NO_SPIRIT" \
-       ../../ && make && make install) || abort "Failed building for simulator"
+       -DCMAKE_C_COMPILER:FILEPATH=$XCODE_ROOT/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang \
+       -DCMAKE_CXX_COMPILER:FILEPATH=$XCODE_ROOT/Toolchains/XcodeDefault.xctoolchain/usr/bin/$COMPILER \
+       -DCMAKE_OSX_SYSROOT:FILEPATH=$ISIM_SDK/SDKs/iPhoneSimulator${SDK_VER}.sdk \
+       -DCMAKE_C_FLAGS:STRING="-arch x86_64 -fvisibility=hidden -miphoneos-version-min=7.0 -isysroot $ISIM_SDK/SDKs/iPhoneSimulator${SDK_VER}.sdk" \
+       -DCMAKE_CXX_FLAGS:STRING="-arch x86_64 -fvisibility=hidden -miphoneos-version-min=7.0 -fvisibility-inlines-hidden -isysroot $ISIM_SDK/SDKs/iPhoneSimulator${SDK_VER}.sdk -DBOOST_SIGNALS_NO_DEPRECATION_WARNING" \
+       $WT_DIR )
+       #cd /Users/ckmorte/InterSpec/target/ios/wt/wt-3.3.4
+       cd $BUILD_X86_64_DIR
+       make VERBOSE=1 -j12 || abort "Failed building for x86_64 architecture"
 }
 
 combineLibs()
@@ -141,14 +159,13 @@
     FRAMEWORK_INSTALL_NAME=$FRAMEWORK_BUNDLE/Versions/$FRAMEWORK_VERSION/$FRAMEWORK_NAME
 
     echo "Framework: Creating final library..."
-    lipo -create \
-	-arch armv6 build-armv6/Wt.a \
-	-arch armv7 build-armv7/Wt.a \
-	-arch i386 build-i386/Wt.a \
+    xcrun -sdk iphoneos lipo -create \
+	-arch armv64 build-armv64/Wt.a \
+	-arch x86-64 build-X86-64/Wt.a \
 	-o $FRAMEWORK_INSTALL_NAME || abort "lipo failed"
 
     echo "Framework: Copying headers..."
-    cp -r stage/include/Wt/* $FRAMEWORK_BUNDLE/Headers/
+cp -r ${STAGE_DIR}/include/Wt/* $FRAMEWORK_BUNDLE/Headers/
 
     echo "Framework: Creating plist..."
     cat > $FRAMEWORK_BUNDLE/Resources/Info.plist <<EOF
@@ -176,10 +193,17 @@
 }
 
 clean
-build-armv6
-build-armv7
-build-i386
-combineLibs $BUILD_ARMV6_DIR
-combineLibs $BUILD_ARMV7_DIR
-combineLibs $BUILD_I386_DIR
-createFramework
+build-arm64
+build-X86-64
+combineLibs $BUILD_ARM64_DIR
+combineLibs $BUILD_X86_64_DIR
+#createFramework
+
+[ -d ${STAGE_DIR}/lib ] || mkdir -p ${STAGE_DIR}/lib
+
+cd ${BUILD_DIR}
+xcrun -sdk iphoneos lipo -create ./build-arm64/src/http/libwthttp.a ./build-x86-64/src/http/libwthttp.a -output ${STAGE_DIR}/lib/libwthttp.a
+xcrun -sdk iphoneos lipo -create ./build-arm64/src/Wt/Dbo/backend/libwtdbosqlite3.a ./build-x86-64/src/Wt/Dbo/backend/libwtdbosqlite3.a -output ${STAGE_DIR}/lib/libwtdbosqlite3.a
+xcrun -sdk iphoneos lipo -create ./build-arm64/src/Wt/Dbo/libwtdbo.a ./build-x86-64/src/Wt/Dbo/libwtdbo.a -output ${STAGE_DIR}/lib/libwtdbo.a
+xcrun -sdk iphoneos lipo -create ./build-arm64/src/libwt.a ./build-x86-64/src/libwt.a -output ${STAGE_DIR}/lib/libwt.a
+xcrun -sdk iphoneos lipo -create ./build-arm64/src/libwttest.a ./build-x86-64/src/libwttest.a -output ${STAGE_DIR}/lib/libwttest.a
\ No newline at end of file
